cmake_minimum_required(VERSION 2.4.6)
SET(PROJECT_NAME sdf_tracker)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake)

if(COMMAND cmake_policy)
  cmake_policy(SET CMP0003 NEW)
endif(COMMAND cmake_policy)

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
SET(CMAKE_BUILD_TYPE Release)

#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)

#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

set(CMAKE_CXX_FLAGS "-O3 -fopenmp")
set(CMAKE_CXX_FLAGS_DEBUG "-O0")
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -fopenmp")


find_package(OpenCV REQUIRED)
find_package(Eigen3 REQUIRED)
include_directories(${EIGEN3_INCLUDE_DIR})
include_directories(/usr/include/vtk-5.8)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
include_directories(${OPENCV_INCLUDE_DIRS})

link_directories(${CMAKE_CURRENT_SOURCE_DIR}/lib)
link_directories(${OPENCV_LIBRARY_DIRS})
add_definitions(${OPENCV_DEFINITIONS})

###############################################################################
add_library(${PROJECT_NAME} src/sdf_tracker.cpp)

target_link_libraries(${PROJECT_NAME} 
  ${OpenCV_LIBS} 
  vtkIO 
  vtkFiltering 
  vtkCommon
  boost_system
)


###############################################################################
add_executable(
  sdf_tracker_app
  src/tracker_app.cpp)
  
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include/openni)
target_link_libraries(sdf_tracker_app 
  ${PROJECT_NAME}
  ${OpenCV_LIBS} 
  OpenNI2
)
  
